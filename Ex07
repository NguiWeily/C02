Chapter X
Exercise 07 : ft_strupcase
Exercise 07
ft_strupcase
Turn-in directory : ex07/
Files to turn in : ft_strupcase.c
Allowed functions : None
• Create a function that transforms every letter to uppercase.
• Here’s how it should be prototyped :
char
*ft_strupcase(char *str);
• It should return str. and create main test code and comply norminette and don't use "for" and function as short as possible

Certainly! Here's a possible solution for the `ft_strupcase` function:

```c
char *ft_strupcase(char *str)
{
    int i = 0;
    
    while (str[i] != '\0')
    {
        if (str[i] >= 'a' && str[i] <= 'z')
            str[i] -= 32;
        i++;
    }
    
    return str;
}
```

Explanation:
1. We initialize the index `i` to 0.
2. We iterate over the characters of the string using a `while` loop until we reach the null terminator `'\0'`.
3. Inside the loop, we check if the current character `str[i]` is within the range of lowercase alphabetical characters (from 'a' to 'z'). If it is, we convert it to uppercase by subtracting 32 from its ASCII value. This transformation is possible because uppercase and lowercase letters have a difference of 32 in ASCII values.
4. We increment the index `i` to move to the next character in the string.
5. If we reach the end of the string without encountering any lowercase character, we simply return `str` as it is.
6. The function returns `str` after all characters have been processed and transformed.

Here's an example of a main function to test the `ft_strupcase` function:

```c
#include <stdio.h>

char *ft_strupcase(char *str);

int main(void)
{
    char str1[] = "Hello World!";
    char str2[] = "hello123";
    char str3[] = "UPPERCASE";
    
    printf("%s\n", ft_strupcase(str1)); // Output: HELLO WORLD!
    printf("%s\n", ft_strupcase(str2)); // Output: HELLO123
    printf("%s\n", ft_strupcase(str3)); // Output: UPPERCASE
    
    return 0;
}
```

Compile and run this code, and you should see the expected output for each test case.
