Chapter VI
Exercise 03 : ft_str_is_numeric
Exercise 03
ft_str_is_numeric
Turn-in directory : ex03/
Files to turn in : ft_str_is_numeric.c
Allowed functions : None
• Create a function that returns 1 if the string given as a parameter contains only
digits, and 0 if it contains any other character.
• Here’s how it should be prototyped :
int ft_str_is_numeric(char *str);
• It should return 1 if str is empty. and create main test code and comply norminette and don't use "for" and function as short as possible
Here's a shortened version of the `ft_str_is_numeric` function that complies with the norminette, avoids using a `for` loop, and is as short as possible:

```c
int ft_str_is_numeric(char *str) {
	while (*str) {
		if (*str < '0' || *str > '9')
			return 0;
		str++;
	}
	return 1;
}

int main() {
	char *str1 = "12345";
	char *str2 = "abc123";
	char *str3 = "";

	int result1 = ft_str_is_numeric(str1); // returns 1
	int result2 = ft_str_is_numeric(str2); // returns 0
	int result3 = ft_str_is_numeric(str3); // returns 1

	return 0;
}
```

The function iterates through each character of the string using a `while` loop. If any character is found to be outside the range of `'0'` to `'9'`, the function immediately returns `0`, indicating that the string contains a non-numeric character. If the loop completes without finding any non-numeric characters, the function returns `1`, indicating that the string contains only digits. The main test code demonstrates the usage of the function with different input strings.
