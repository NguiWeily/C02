Files to turn in : ft_str_is_numeric.c
Allowed functions : None

• Create a function that returns 1 if the string given as a parameter contains only
digits, and 0 if it contains any other character.
• Here’s how it should be prototyped :
int ft_str_is_numeric(char *str);

• It should return 1 if str is empty.

Certainly! Here's an implementation of the `ft_str_is_numeric` function that checks if a string contains only numeric characters:

```c
int ft_str_is_numeric(char *str)
{
    if (*str == '\0')
        return 1;  // Empty string is considered numeric

    while (*str)
    {
        if (*str < '0' || *str > '9')
            return 0;  // Non-numeric character found
        str++;
    }

    return 1;  // All characters are numeric
}
```

In this implementation, the `ft_str_is_numeric` function takes a parameter `str`, which is a pointer to the string to be checked.

The function first checks if the string is empty by comparing the first character `*str` with the null terminator `'\0'`. If it is empty, the function immediately returns 1, indicating that the string is considered numeric.

If the string is not empty, the function iterates through each character of the string using a while loop. It checks if the character is not a digit by comparing it with the ASCII values of '0' to '9'. If a non-numeric character is found, the function returns 0, indicating that the string contains a non-numeric character.

If the function completes the loop without encountering any non-numeric characters, it returns 1, indicating that the string contains only numeric characters.

Please note that this implementation assumes that the input string is null-terminated.
