Chapter XI
Exercise 08 : ft_strlowcase
Exercise 08
ft_strlowcase
Turn-in directory : ex08/
Files to turn in : ft_strlowcase.c
Allowed functions : None
• Create a function that transforms every letter to lowercase.
• Here’s how it should be prototyped :
char
*ft_strlowcase(char *str);
• It should return str. and create main test code and comply norminette and don't use "for" and function as short as possible

Certainly! Here's a possible solution for the `ft_strlowcase` function:

```c
char *ft_strlowcase(char *str)
{
    int i = 0;
    
    while (str[i] != '\0')
    {
        if (str[i] >= 'A' && str[i] <= 'Z')
            str[i] += 32;
        i++;
    }
    
    return str;
}
```

Explanation:
1. We initialize the index `i` to 0.
2. We iterate over the characters of the string using a `while` loop until we reach the null terminator `'\0'`.
3. Inside the loop, we check if the current character `str[i]` is within the range of uppercase alphabetical characters (from 'A' to 'Z'). If it is, we convert it to lowercase by adding 32 to its ASCII value. This transformation is possible because uppercase and lowercase letters have a difference of 32 in ASCII values.
4. We increment the index `i` to move to the next character in the string.
5. If we reach the end of the string without encountering any uppercase character, we simply return `str` as it is.
6. The function returns `str` after all characters have been processed and transformed.

Here's an example of a main function to test the `ft_strlowcase` function:

```c
#include <stdio.h>

char *ft_strlowcase(char *str);

int main(void)
{
    char str1[] = "Hello World!";
    char str2[] = "LOWERCASE";
    char str3[] = "Hello123";
    
    printf("%s\n", ft_strlowcase(str1)); // Output: hello world!
    printf("%s\n", ft_strlowcase(str2)); // Output: lowercase
    printf("%s\n", ft_strlowcase(str3)); // Output: hello123
    
    return 0;
}
```

Compile and run this code, and you should see the expected output for each test case.
